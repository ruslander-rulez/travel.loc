<?php
namespace App\Infrastructure\Eloquent;

use App\Domain\%1$s\%1$s;
use App\Domain\%1$s\%1$sRepository;
use App\Domain\%1$s\%1$sFilter;
use App\Domain\Core\Pagination;
use App\Domain\Core\Sort;

class %1$sRepositoryEloquent implements %1$sRepository
{
    use Helper;

    /**
     * @var %1$s
     */
    private $model;

    public function __construct(%1$s $model)
    {
        $this->model = $model;
    }

    /**
     * @param %1$sFilter $filter
     * @param Pagination|null $pagination
     * @param Sort|null $sort
     * @return %1$s[]
     */
    public function all(%1$sFilter $filter, ?Pagination $pagination = null, ?Sort $sort = null)
    {
        $qb =  $this->model->newModelQuery();

        if ($pagination) {
            $items =  $qb->forPage($pagination->page(), $pagination->peerPage())->get();
            $maxItems =  $qb->count();
            return [
                "items" => $items,
                "total" => $maxItems
            ];
        }
        return $qb->all();
    }
}